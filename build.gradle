plugins {
    alias(libs.plugins.architecturyPlugin)
    alias(libs.plugins.architecturyLoom) apply false
    alias(libs.plugins.gitVersion)
}

def git = versionDetails()
def tag = git.lastTag.substring(1)
if (System.getenv("GITHUB_ACTIONS") == "true") {
    if (System.getenv("GITHUB_WORKFLOW") == "Release") {
        version = tag
    } else if (System.getenv("PULL_REQUEST")) {
        version = "${tag}${tag.contains("-") ? "." : "-"}SNAPSHOT.pr.${System.getenv("PULL_REQUEST")}.${System.getenv("GITHUB_RUN_NUMBER")}"
    } else {
        version = "${tag}${tag.contains("-") ? "." : "-"}SNAPSHOT.${System.getenv("GITHUB_RUN_NUMBER")}"
    }
} else {
    version = "${tag}${tag.contains("-") ? "." : "-"}SNAPSHOT"
}

architectury {
    minecraft = libs.minecraft.get().version
}

subprojects {
    apply plugin: libs.plugins.architecturyLoom.get().pluginId
    version = "${rootProject.version}+${project.name}"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft libs.minecraft
        mappings loom.layered() {
            officialMojangMappings()
            parchment variantOf(libs.parchment) {
                artifactType("zip")
            }
        }
    }

    // If you add something to the repositories block
    // add it to the settings.gradle file for Dependabot
    repositories {
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }
        exclusiveContent {
            forRepository {
                maven {
                    name = 'Modrinth'
                    url = 'https://api.modrinth.com/maven'
                }
            }
            filter {
                includeGroup 'maven.modrinth'
            }
        }
        maven {
            name = 'Neoforged'
            url = 'https://maven.neoforged.net/releases/'
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: libs.plugins.architecturyPlugin.get().pluginId
    apply plugin: "maven-publish"

    archivesBaseName = "minecraft-access"
    group = "org.mcaccess.minecraftaccess"

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        options.release = 21
    }

    java {
        withSourcesJar()
    }
}
